/*
 * Consumer Data Standards
 * Sample client library to Demonstrate the Consumer Data Right APIs
 *
 * NOTE: This class is auto generated by the codegen artefact
 * https://github.com/ConsumerDataStandardsAustralia/java-artefacts/codegen
 */
package au.org.consumerdatastandards.client.model;

import java.util.Objects;

public class BankingProductConstraint {

    public enum ConstraintType {
        MAX_BALANCE,
        MAX_LIMIT,
        MIN_BALANCE,
        MIN_LIMIT,
        OPENING_BALANCE
    }

    private String additionalInfo;

    private String additionalInfoUri;

    private String additionalValue;

    private ConstraintType constraintType;

    /**
     * Display text providing more information the constraint
     * @return additionalInfo
     */
    public String getAdditionalInfo() {
        return additionalInfo;
    }

    public void setAdditionalInfo(String additionalInfo) {
        this.additionalInfo = additionalInfo;
    }

    /**
     * Link to a web page with more information on the constraint
     * @return additionalInfoUri
     */
    public String getAdditionalInfoUri() {
        return additionalInfoUri;
    }

    public void setAdditionalInfoUri(String additionalInfoUri) {
        this.additionalInfoUri = additionalInfoUri;
    }

    /**
     * Generic field containing additional information relevant to the [constraintType](#tocSproductconstrainttypedoc) specified.  Whether mandatory or not is dependent on the value of [constraintType](#tocSproductconstrainttypedoc)
     * @return additionalValue
     */
    public String getAdditionalValue() {
        return additionalValue;
    }

    public void setAdditionalValue(String additionalValue) {
        this.additionalValue = additionalValue;
    }

    /**
     * Get constraintType
     * @return constraintType
     */
    public ConstraintType getConstraintType() {
        return constraintType;
    }

    public void setConstraintType(ConstraintType constraintType) {
        this.constraintType = constraintType;
    }

    @Override
    public boolean equals(Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        BankingProductConstraint bankingProductConstraint = (BankingProductConstraint) o;
        return Objects.equals(this.additionalInfo, bankingProductConstraint.additionalInfo) &&
            Objects.equals(this.additionalInfoUri, bankingProductConstraint.additionalInfoUri) &&
            Objects.equals(this.additionalValue, bankingProductConstraint.additionalValue) &&
            Objects.equals(this.constraintType, bankingProductConstraint.constraintType);
    }

    @Override
    public int hashCode() {
        return Objects.hash(
            additionalInfo,
            additionalInfoUri,
            additionalValue,
            constraintType);
    }

    @Override
    public String toString() {
        return "class BankingProductConstraint {\n" +
            "   additionalInfo: " + toIndentedString(additionalInfo) + "\n" + 
            "   additionalInfoUri: " + toIndentedString(additionalInfoUri) + "\n" + 
            "   additionalValue: " + toIndentedString(additionalValue) + "\n" + 
            "   constraintType: " + toIndentedString(constraintType) + "\n" + 
            "}";
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private String toIndentedString(Object o) {
        if (o == null) {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }
}
